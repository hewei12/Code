<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Redis.Cache.0.9.2.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Redis.Cache.Fakes.ShimItemCache`1">
            <summary>Redis.Cache.ItemCache`1 的填充码类型</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimItemCache`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimItemCache`1.#ctor(Redis.Cache.ItemCache{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AbsoluteExpirationGet">
            <summary>设置 ItemCache`1.get_AbsoluteExpiration() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AbsoluteExpirationSetTimeSpan">
            <summary>设置 ItemCache`1.set_AbsoluteExpiration(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AddItemItemCacheOfT0Boolean">
            <summary>设置 ItemCache`1.AddItem(ItemCache`1&lt;!0&gt; itemsCache, Boolean forceOverWrite) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AddItemStringT0Boolean">
            <summary>设置 ItemCache`1.AddItem(String key, !0 value, Boolean forceOverWrite) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AddItemStringT0TimeSpanTimeSpanBoolean">
            <summary>设置 ItemCache`1.AddItem(String key, !0 value, TimeSpan slidingExpiration, TimeSpan absoluteExpiration, Boolean forceOverWrite) 的 填充码</summary>
        </member>
        <member name="T:Redis.Cache.Fakes.ShimItemCache`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.AbsoluteExpirationGet">
            <summary>设置 ItemCache`1.get_AbsoluteExpiration() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.AbsoluteExpirationSetTimeSpan">
            <summary>设置 ItemCache`1.set_AbsoluteExpiration(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.KeyGet">
            <summary>设置 ItemCache`1.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.KeySetString">
            <summary>设置 ItemCache`1.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.SaveBoolean">
            <summary>设置 ItemCache`1.Save(Boolean forceOverWrite) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.SlidingExpirationGet">
            <summary>设置 ItemCache`1.get_SlidingExpiration() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.SlidingExpirationSetTimeSpan">
            <summary>设置 ItemCache`1.set_SlidingExpiration(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.ValueGet">
            <summary>设置 ItemCache`1.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.AllInstances.ValueSetT0">
            <summary>设置 ItemCache`1.set_Value(!0 value) 的 填充码</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimItemCache`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimItemCache`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.Constructor">
            <summary>设置 ItemCache`1.ItemCache`1() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.ConstructorStringT0">
            <summary>设置 ItemCache`1.ItemCache`1(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.ConstructorStringT0TimeSpanTimeSpan">
            <summary>设置 ItemCache`1.ItemCache`1(String key, !0 value, TimeSpan slidingExpiration, TimeSpan absoluteExpiration) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.DeleteItemString">
            <summary>设置 ItemCache`1.DeleteItem(String key) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.ExistItemString">
            <summary>设置 ItemCache`1.ExistItem(String key) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.GetItemString">
            <summary>设置 ItemCache`1.GetItem(String key) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.KeyGet">
            <summary>设置 ItemCache`1.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.KeySetString">
            <summary>设置 ItemCache`1.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.SaveBoolean">
            <summary>设置 ItemCache`1.Save(Boolean forceOverWrite) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.SlidingExpirationGet">
            <summary>设置 ItemCache`1.get_SlidingExpiration() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.SlidingExpirationSetTimeSpan">
            <summary>设置 ItemCache`1.set_SlidingExpiration(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.ValueGet">
            <summary>设置 ItemCache`1.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimItemCache`1.ValueSetT0">
            <summary>设置 ItemCache`1.set_Value(!0 value) 的 填充码</summary>
        </member>
        <member name="T:Redis.Cache.Fakes.ShimRedisCacheException">
            <summary>Redis.Cache.RedisCacheException 的填充码类型</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimRedisCacheException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimRedisCacheException.#ctor(Redis.Cache.RedisCacheException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Redis.Cache.Fakes.ShimRedisCacheException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimRedisCacheException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimRedisCacheException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimRedisCacheException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimRedisCacheException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimRedisCacheException.ConstructorStringException">
            <summary>设置 RedisCacheException.RedisCacheException(String mex, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:Redis.Cache.Fakes.ShimUtility">
            <summary>Redis.Cache.Utility 的填充码类型</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.ShimUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.ConvertObjToRedisValueObjectUtilityStatusItemOut">
            <summary>设置 Utility.ConvertObjToRedisValue(Object value, StatusItem&amp; statusItem) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.ConvertRedisValueToObjectRedisValueTypeUtilityStatusItem">
            <summary>设置 Utility.ConvertRedisValueToObject(RedisValue value, Type type, StatusItem statusItem) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.DeSerializeByteArray">
            <summary>设置 Utility.DeSerialize(Byte[] obj) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.DeflateByteArrayCompressionMode">
            <summary>设置 Utility.Deflate(Byte[] source_byte, CompressionMode type_deflate) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.SerializeObject">
            <summary>设置 Utility.Serialize(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.StaticConstructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.StatusItemDeSerializeString">
            <summary>设置 Utility.StatusItemDeSerialize(String v) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.TTLSerializeTimeSpanTimeSpanDateTimeUtilityStatusItem">
            <summary>设置 Utility.TTLSerialize(TimeSpan ttlSLI, TimeSpan ttlABS, DateTime forceUpdateDtABS, StatusItem statusItem) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.TTL_DT_DeSerializeString">
            <summary>设置 Utility.TTL_DT_DeSerialize(String ttl) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.TTL_Is_ExpiredDateTimeDateTime">
            <summary>设置 Utility.TTL_Is_Expired(DateTime slidingExpiration_DT, DateTime absoluteExpiration_DT) 的 填充码</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.ShimUtility.TTL_TS_DeSerializeString">
            <summary>设置 Utility.TTL_TS_DeSerialize(String ttl) 的 填充码</summary>
        </member>
        <member name="T:Redis.Cache.Fakes.StubItemCache`1">
            <summary>Redis.Cache.ItemCache`1 的存根类型</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubItemCache`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubItemCache`1.#ctor(System.String,`0)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubItemCache`1.#ctor(System.String,`0,System.TimeSpan,System.TimeSpan)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubItemCache`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubItemCache`1.InitializeStub">
            <summary>初始化 type StubItemCache 的新实例</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubItemCache`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubItemCache`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Redis.Cache.Fakes.StubRedisCacheException">
            <summary>Redis.Cache.RedisCacheException 的存根类型</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubRedisCacheException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubRedisCacheException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubRedisCacheException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubRedisCacheException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubRedisCacheException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubRedisCacheException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubRedisCacheException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubRedisCacheException.InitializeStub">
            <summary>初始化 type StubRedisCacheException 的新实例</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:Redis.Cache.Fakes.StubRedisCacheException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Redis.Cache.Fakes.StubRedisCacheException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Redis.Cache.Fakes.StubRedisCacheException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
    </members>
</doc>
